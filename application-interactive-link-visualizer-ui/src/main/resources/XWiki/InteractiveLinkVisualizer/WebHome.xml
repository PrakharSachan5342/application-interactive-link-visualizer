<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="XWiki.InteractiveLinkVisualizer.WebHome" locale="">
  <web>XWiki.InteractiveLinkVisualizer</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Interactive Link Visualizer</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($discard = $xwiki.ssx.use('XWiki.InteractiveLinkVisualizer.Code.MainVisualisation'))
{{/velocity}}{{include reference="Main.SolrSearchConfig" /}}{{include reference="Main.SolrSearchMacros" /}}{{velocity output="false"}}

#set ($discard = $solrConfig.facetFields.remove('type'))
#set ($discard = $solrConfig.filterQuery.add('type:DOCUMENT'))
#set ($discard = $solrConfig.put('facetEnabled', false))

## To return visualisation as search results
#macro (displaySearchResults)
{{html}}
&lt;div id="sigma-container" data-results="$escapetool.xml($jsontool.serialize($searchResponse.results))"&gt;
&lt;div id="top-bar"&gt;
   &lt;div id="search"&gt;
      &lt;i class="fa fa-search"&gt;&lt;/i&gt;
      &lt;input
         type="search"
         id="search-input"
         list="suggestions"
         placeholder="Find pages in graphâ€¦"
         title="Find pages from the visualized graph"&gt;
      &lt;/input&gt;
      &lt;datalist id="suggestions"&gt;&lt;/datalist&gt;
   &lt;/div&gt;
   &lt;div title="Displays information about graph" id="graph-info"&gt;
      &lt;span id="node-count"&gt;&lt;/span&gt;
      &lt;span id="edge-count"&gt;&lt;/span&gt;
   &lt;/div&gt;
&lt;/div&gt;
  &lt;div class="buttonwrapper" id="graph-buttons"&gt;
   &lt;button class="icon-button" title="Zoom In" id="zoom-in"&gt;$services.icon.renderHTML('search-plus')&lt;/button&gt;
   &lt;button class="icon-button" title="Zoom Out" id="zoom-out"&gt;$services.icon.renderHTML('search-minus')&lt;/button&gt;
   &lt;button class="icon-button" title="Increase Graph Iterations: If graph is not layouted properly &amp; need more iterations" id="iteration-button"&gt;$services.icon.renderHTML('refresh')&lt;/button&gt;
   &lt;button class="icon-button" title="Default Zoom" id="zoom-reset"&gt;$services.icon.renderHTML('world')&lt;/button&gt;
   &lt;button class="icon-button" title="Fullscreen" id="view-fullscreen"&gt;$services.icon.renderHTML('arrows')&lt;/button&gt;
   &lt;button class="icon-button hidden" title="Kill Graph" id="kill-graph-button"&gt;$services.icon.renderHTML('delete')&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
{{/html}}
#end


## To get only the relevant field list (performance improvement)
#macro(setHighlightQuery $query)
  #set ($discard = $query.bindValue('fl', 'title_, reference, links, wiki, name, spaces'))
#end


## For number of results input &amp; number of rows
#macro (displaySearchForm)

 ## Override default no. of rows
  #set ($rows = $numbertool.toNumber($request.rows).intValue())
  #if ("$!rows" == '')
    #set ($rows = 100)
  #end
  ##
  #set($void = $services.progress.startStep('#displaySearchForm'))
  {{html clean="false"}}
  &lt;form class="search-form row" action="$doc.getURL()" role="search"&gt;
    &lt;div class="hidden"&gt;
      &lt;input type="hidden" name="sort" value="$!escapetool.xml($sort)"/&gt;
      &lt;input type="hidden" name="sortOrder" value="$!escapetool.xml($sortOrder)"/&gt;
      &lt;input type="hidden" name="highlight" value="$highlightEnabled"/&gt;
      &lt;input type="hidden" name="facet" value="$facetEnabled"/&gt;
      ## The parameter used to determine if the request has been redirected with default search filters.
      &lt;input type="hidden" name="r" value="$!escapetool.xml($request.r)"/&gt;
      #if ("$!request.debug" != '')
        &lt;input type="hidden" name="debug" value="$escapetool.xml($request.debug)"/&gt;
      #end
      ## Preserve the current facet values when submitting a new search query.
      #foreach ($entry in $request.parameterMap.entrySet())
        #if ($entry.key.startsWith('f_') || $entry.key.startsWith('l_'))
          #foreach ($value in $entry.value)
            &lt;input type="hidden" name="$escapetool.xml($entry.key)" value="$escapetool.xml($value)"/&gt;
          #end
        #end
      #end
    &lt;/div&gt;
    &lt;div class="col-xs-12 col-sm-6"&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="search" name="text" class="form-control withTip useTitleAsTip"
          title="$services.localization.render('search.page.bar.query.title')" value="$escapetool.xml($text)"/&gt;
        &lt;span class="input-group-btn"&gt;
          &lt;button type="submit" class="btn btn-primary"&gt;
            $services.icon.renderHTML('search')
            &lt;span class="sr-only"&gt;$services.localization.render('search.page.bar.submit')&lt;/span&gt;
          &lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div class="" id="nb-results"&gt;
        &lt;input type="number" name="rows" title="Number of documents to display in graph"
        placeholder="Max no. of pages" value="$!escapetool.xml($request.rows)" id="rows"/&gt;
        &lt;span id="nb-results"&gt;
          &lt;button type="submit" id="refresh-button" class="btn btn-primary"&gt;
            $services.icon.renderHTML('refresh')
          &lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
  &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
  #if ($text == '')
    #set ($text = "*")
  #end
#end


## To disable Highlighting Search Option
#macro (displaySearchResultsSort)
  #set ($defaultSortOrder = $solrConfig.sortFields.get($type))
  #if (!$defaultSortOrder)
    #set ($defaultSortOrder = {'score': 'desc'})
  #end
  #set ($sortOrderSymbol = {
    'asc': $services.icon.render('caret-up'),
    'desc': $services.icon.render('caret-down')
  })
  (% class="search-options" %)
  * {{translation key="solr.options"/}}
  #if($facetEnabled)#extendQueryString($url {'facet': [false]})#else#extendQueryString($url {'facet': [true]})#end
  * [[{{translation key="solr.options.facet"/}}&gt;&gt;path:${url}||class="options-item#if($facetEnabled) active#end" title="$services.localization.render('solr.options.facet.title')"]]

  (% class="search-results-sort" %)
  * {{translation key="solr.sortBy"/}}
  #foreach ($entry in $defaultSortOrder.entrySet())
    #set ($class = 'sort-item')
    #set ($sortOrderIndicator = $NULL)
    #set ($targetSortOrder = $entry.value)
    #if ($sort == $entry.key)
      #set ($class = "$class active")
      #set ($sortOrderHint = $services.localization.render("solr.sortOrder.$sortOrder"))
      #set ($sortOrderIndicator = "(% class=""sort-item-order"" title=""$sortOrderHint"" %)$sortOrderSymbol.get($sortOrder)(%%)")
      #set ($targetSortOrder = "#if ($sortOrder == 'asc')desc#{else}asc#end")
    #end
    #extendQueryString($url {'sort': [$entry.key], 'sortOrder': [$targetSortOrder]})
    * [[{{translation key="solr.sortBy.$entry.key"/}}$!sortOrderIndicator&gt;&gt;path:${url}||class="$class"]]
  #end
#end
{{/velocity}}{{velocity}}#handleSolrSearchRequest{{/velocity}}</content>
  <object>
    <name>XWiki.InteractiveLinkVisualizer.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>c1d49352-221a-4f45-b486-d69558824ad9</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>require(['jquery', 'visualisationAPI'], function($, visualisationAPI) {
    var tempData = null,
        edgeKeyCounter = 1;

    #template('colorThemeInit.vm')
    var themeColors = $jsontool.serialize({
        'nodeColor': $theme.linkColor,
        'labelColor': $theme.textColor,
        'fadeColor': $theme.highlightColor,
        'labelContainerColor': $theme.pageContentBackgroundColor
    });

    var init = function() {
        $("kill-graph-button").click();
        tempData = JSON.parse(document.getElementById('sigma-container').dataset.results);
        const nodes = tempData.map(function(obj) {
            return {
                key: obj.reference,
                attributes: {
                    label: obj.title_,
                    color: themeColors.nodeColor,
                    size: 5,
                    pageURL: new XWiki.Document(XWiki.Model.resolve(obj.reference)).getURL()
                }
            };
        });
        const edges = [];
        tempData.forEach(function(obj) {
            if (obj.links &amp;&amp; obj.links.length &gt; 0) {
                obj.links.forEach(function(link) {
                    var target = link.replace(/^entity:/, '');
                    var isValid = tempData.some(function(item) {
                        return item.reference === target;
                    });
                    if (isValid) {
                        edges.push({
                            key: edgeKeyCounter.toString(),
                            target: target,
                            source: obj.reference
                        });
                        edgeKeyCounter++;
                    }
                });
            }
        });
        var graphData = {
            nodes: nodes,
            edges: edges
        };
        let nb = nodes.length;
        $('#node-count').text('Displaying ' + nb + ' documents &amp; ');
        $('#edge-count').text(edges.length + ' links');
        visualisationAPI.visualize(graphData, "sigma-container", themeColors, isPanel = false, nb);

        const sigmaContainer = document.querySelector("#sigma-container");
        $('#view-fullscreen').click(function() {
            if (document.fullscreenElement) {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.webkitCancelFullScreen) {
                    document.webkitCancelFullScreen();
                } else if (document.msExitFullscreen) {
                    document.msExitFullscreen();
                }
            } else {
                if (!document.mozFullScreen &amp;&amp; !document.webkitFullScreen) {
                    if (sigmaContainer.requestFullscreen) {
                        sigmaContainer.requestFullscreen();
                    } else if (sigmaContainer.mozRequestFullScreen) {
                        sigmaContainer.mozRequestFullScreen();
                    } else if (sigmaContainer.webkitRequestFullScreen) {
                        sigmaContainer.webkitRequestFullScreen();
                    } else if (sigmaContainer.msRequestFullscreen) {
                        sigmaContainer.msRequestFullscreen();
                    }
                }
            }
        });
    };
    if ($('#sigma-container') &amp;&amp; $('#sigma-container').data('results')) {
    $(init).on('xwiki:dom:updated', init);
    }
});</code>
    </property>
    <property>
      <name>Visualisation API</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
